@model IList<TCC_Unip.Models.Servico.Agenda>

@{
    var user = (TCC_Unip.Models.Servico.Usuario)ViewBag.Usuario;
}

<link href="~/Content/bootstrap-datepicker3.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script src="~/Scripts/locales/bootstrap-datepicker.pt-BR.min.js"></script>

<style type="text/css">
    .datepicker {
        background: #808080;
        color: #ffffff;
    }
</style>

@if (user != null)
{
<div class="row">

    <div class="form-inline">

        <div class="col-md-10">
            <div style="display:inline-flex; width: 100%;">
                <div>
                    <label class="control-label">Exibir De</label>
                </div>
                <div class="input-group" style="padding-left: 2%; padding-right: 2%; width: 30%">
                    <div>
                        <input class="form-control dataPesquisa alinhamentoSelect" type="text" id="dataInicio">
                    </div>
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>
                    </span>
                </div>
                <div>
                    <label class="control-label">Até</label>
                </div>
                <div class="input-group" style="padding-left: 2%; padding-right: 2%; width: 30%">
                    <div>
                        <input class="form-control dataPesquisa alinhamentoSelect" type="text" id="dataFim">
                    </div>
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>
                    </span>
                </div>                
                <div>
                    <input type="button" class="btn btn-primary" id="btPesquisar" value="Ok" />
                </div>
            </div>
        </div>
        
    </div>

    <div class="col-md-12 col-sm-12" style="overflow-x:auto; padding-top: 5%">
        <table class="table table-striped" id="gridAgenda" carregada="false">
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>Data</th>
                    <th>Hora</th>
                    <th>Prossional</th>
                    <th>Valor</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var itemModel in Model)
                {
                    <tr>
                        <td>@itemModel.Funcionario.Nome</td>
                        <td>@itemModel.Data.ToShortDateString()</td>
                        <td>@itemModel.Horario</td>
                        <td>@itemModel.Funcionario.Nome</td>
                        <td>R$ @itemModel.Valor</td>
                        <td class="text-center">
                            <a class="btnEditar" id-registro="@itemModel.Id" title="Editar" onclick="agendaListagem.modalEditar(this)"
                               style="cursor: pointer;">
                                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                            </a>
                        </td>
                        <td class="text-center">
                            <a class="btnExcluir" id-registro="@itemModel.Id"
                               nome-registro="Dia @itemModel.Data.ToShortDateString() as @itemModel.Horario h"
                               title="Excluir" onclick="agendaListagem.excluir(this)" style="cursor: pointer;">
                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

    <script>


        $('.dataPesquisa').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            language: "pt-BR"
        });

        $('.dataPesquisa').mask('99/99/9999', { placeholder: "dd/mm/aaaa" });

    $("#gridAgenda").DataTable({
        language: {
            url: "https://cdn.datatables.net/plug-ins/1.10.16/i18n/Portuguese-Brasil.json"
        },
        "columnDefs": [
            { "targets": [5, 6], "orderable": false, "searchable": false }
        ],
        "aaSorting": []
    });

    $("#btPesquisar").on('click', function () {
        listagemAgenda.getAgendaPorDatas($("#dataInicio").val(), $("#dataFim").val());
    });

    var agendaListagem = {

        modalEditar: function (elem) {

            var id = $(elem).attr("id-registro");

            $.ajax({
                url: "@Url.Action("ModalEditar", "Consulta")/",
                type: "GET",
                data: {id : id},
                success: function (html) {
                    bootbox.dialog({
                        title: "Editar Consulta",
                        message: html
                    });
                },error: function (jqXHR, textStatus, errorThrown) {
                    validacao.errorAjax(jqXHR, textStatus, errorThrown);
                }
            });
        },

        excluir: function (elem) {

            var nome = $(elem).attr("nome-registro");

            swal({
                title: 'Você confirma a exclusão da consulta do ' + nome + '?',
                text: '',
                type: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10386B',
                confirmButtonText: 'Ok',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                allowOutsideClick: false
            }).then((willDelete) => {

                if (willDelete.value) {

                    var id = $(elem).attr("id-registro");

                    $.ajax({
                        url: "@Url.Action("Excluir", "Agenda")/" + id,
                        type: "POST",
                        success: function (result) {

                            var retorno = result.mensagensRetorno;

                            if (retorno.Status) {
                                swal({
                                    title: '',
                                    text: retorno.MensagemExibicao,
                                    type: 'success',
                                    confirmButtonColor: '#10386B',
                                    allowOutsideClick: false
                                }).then(function () {
                                    bootbox.hideAll();
                                    listagemAgenda.listaAgendaGrid($(".abaGridConsultas"), false);
                                });
                            }
                            else {

                                swal({
                                    title: '',
                                    text: retorno.MensagemExibicao,
                                    type: 'warning',
                                    confirmButtonColor: '#10386B',
                                    allowOutsideClick: false
                                });
                                console.log(retorno.MensagemAnalise);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            validacao.errorAjax(jqXHR, textStatus, errorThrown);
                        }
                    });

                }

            });

        }
    };

    </script>
}
