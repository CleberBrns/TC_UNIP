@model IList<TCC_Unip.Models.Servico.Usuario>
@using TCC_Unip.Models.Local;
@{
    var user = (TCC_Unip.Models.Servico.Usuario)ViewBag.Usuario;    
}

@if (user != null)
{
    <div class="row">
        <div class="col-md-12">
            <div style="text-align: right">
                <button type="button" class="btn btn-primary" id="btnNovoUsuario">
                    <span class="glyphicon glyphicon-plus"></span>
                    Novo
                </button>
            </div>
        </div>
        <div class="col-md-12">
            <br />
        </div>
        <div class="col-md-12 col-sm-12" style="overflow-x:auto;">
            <table class="table table-striped" id="gridUsuario" carregado="false">
                <thead>
                    <tr>
                        @*<th>Nome</th>*@
                        <th>E-mail</th>
                        <th>Perfil</th>
                        <th>Situação</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var itemModel in Model)
                    {
                        <tr>
                            @*<td>@itemModel.Funcionario.Nome</td>*@
                            <td>@itemModel.Email</td>
                            <td>@itemModel.PermissaoExibicao</td>
                            <td>@itemModel.Status</td>
                            <td class="text-center">
                                <a class="btnEditar" id-registro="@itemModel.Email" title="Editar" onclick="UsuarioListagem.modalEditar(this)"
                                   style="cursor: pointer;">
                                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                </a>
                            </td>
                            <td class="text-center">
                                <a class="btnExcluir" id-registro="@itemModel.Email" nome-registro="@itemModel.Email"
                                   title="Excluir" onclick="UsuarioListagem.excluir(this)" style="cursor: pointer;">
                                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
<script>

    $("#gridUsuario").DataTable({
        language: {
            url: "https://cdn.datatables.net/plug-ins/1.10.16/i18n/Portuguese-Brasil.json"
        },
        "columnDefs": [
            { "targets": [3, 4], "orderable": false, "searchable": false }
        ],
        "aaSorting": []
    });

    $("#btnNovoUsuario").on('click', function () {
        UsuarioListagem.modalCadastrar();
    });

    var UsuarioListagem = {

        modalCadastrar: function () {
            $.ajax({
                url: "@Url.Action("ModalCadastrar", "Usuario")",
                type: "GET",
                success: function (html) {
                    bootbox.dialog({
                        title: "Cadastrar Usuário",
                        message: html
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    validacao.errorAjax(jqXHR, textStatus, errorThrown);
                }
            });
        },

        modalEditar: function (elem) {

            var id = $(elem).attr("id-registro");

            $.ajax({
                url: "@Url.Action("ModalEditar", "Usuario")/",
                type: "GET",
                data: {id : id},
                success: function (html) {

                    bootbox.dialog({
                        title: "Editar Usuário",
                        message: html
                    });
                },error: function (jqXHR, textStatus, errorThrown) {
                    validacao.errorAjax(jqXHR, textStatus, errorThrown);
                }
            });
        },

        excluir: function (elem) {

            var nome = $(elem).attr("nome-registro");

            swal({
                title: 'Você confirma a exclusão do Usuário de Email ' + nome + '?',
                text: '',
                type: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10386B',
                confirmButtonText: 'Ok',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                allowOutsideClick: false
            }).then((willDelete) => {

                if (willDelete.value) {

                    var id = $(elem).attr("id-registro");

                    $.ajax({
                        url: "@Url.Action("Excluir", "Usuario")/",
                        type: "POST",
                        data: { id: id },
                        success: function (result) {

                            var retorno = result.mensagensRetorno;

                            if (retorno.Status) {
                                swal({
                                    title: '',
                                    text: retorno.MensagemExibicao,
                                    type: 'success',
                                    confirmButtonColor: '#10386B',
                                    allowOutsideClick: false
                                }).then(function () {
                                    bootbox.hideAll();
                                    funcoesIndexTabs.listaUsuarios($(".abaUsuarios"), false);
                                });
                            }
                            else {

                                swal({
                                    title: '',
                                    text: retorno.MensagemExibicao,
                                    type: 'warning',
                                    confirmButtonColor: '#10386B',
                                    allowOutsideClick: false
                                });
                                console.log(retorno.MensagemAnalise);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            validacao.errorAjax(jqXHR, textStatus, errorThrown);
                        }
                    });

                }

            });

        }
    };

</script>
