@model TcUnip.Model.Agenda.SessaoModel

@using TcUnip.Web.Models.Local;

@{
    var listPacientes = (IList<TcUnip.Model.Cadastro.PacienteModel>)ViewBag.ListPacientes;
    var listProfissionais = (IList<TcUnip.Model.Cadastro.FuncionarioModel>)ViewBag.ListProfissionais;
    var listHorarios = (IList<DataSelectControl>)ViewBag.ListHorarios;
    var listModalidades = (IList<DataSelectControl>)ViewBag.ListModalidades;

    var user = (TcUnip.Model.Cadastro.UsuarioModel)ViewBag.Usuario;
}

<link href="~/Content/bootstrap-datepicker3.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script src="~/Scripts/locales/bootstrap-datepicker.pt-BR.min.js"></script>

<style type="text/css">
    .datepicker {
        background: #808080;
        color: #ffffff;
    }
</style>

@if (user != null)
{
    using (Html.BeginForm())
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" value="@Model.Id" name="Id" />
            <div class="campos" style="padding: 2% 0 2% 5%">
                <div class="form-group">
                    <div class="form-group">
                        <div>
                            @Html.Label("Paciente", htmlAttributes: new { @class = "control-label col-md-3" })
                        </div>
                        <div class="col-md-8">
                            <select class="form-control alinhamentoSelect" id="paciente" name="IdPaciente">
                                <option value="0">-- Selecione --</option>
                                @foreach (var item in listPacientes)
                                {
                                    if (Model.Paciente != null)
                                    {
                                        if (Model.IdPaciente == item.Id)
                                        {
                                            <option value="@item.Id" selected="selected">@item.Pessoa.Nome</option>
                                        }
                                        else
                                        {
                                            <option value="@item.Id">@item.Pessoa.Nome</option>
                                        }

                                    }
                                    else
                                    {
                                        <option value="@item.Id">@item.Pessoa.Nome</option>
                                    }
                                }
                            </select>
                            <span class="field-validation-valid text-danger" id="validaPaciente" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div>
                            @Html.Label("Profissional", htmlAttributes: new { @class = "control-label col-md-3" })
                        </div>
                        <div class="col-md-8">
                            <select class="form-control alinhamentoSelect" id="profissional" name="IdFuncionario">
                                <option value="0">-- Selecione --</option>
                                @foreach (var item in listProfissionais)
                                {
                                    if (Model.Funcionario != null)
                                    {
                                        if (Model.IdFuncionario == item.Id)
                                        {
                                            <option value="@item.Id" selected="selected">@item.Pessoa.Nome</option>
                                        }
                                        else
                                        {
                                            <option value="@item.Id">@item.Pessoa.Nome</option>
                                        }

                                    }
                                    else
                                    {
                                        <option value="@item.Id">@item.Pessoa.Nome</option>
                                    }
                                }
                            </select>
                            <span class="field-validation-valid text-danger" id="validaProfissional" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div>
                            @Html.Label("Modalidade", htmlAttributes: new { @class = "control-label col-md-3" })
                        </div>
                        <div class="col-md-8">
                            @if (Model.Id > 0)
                            {
                                <select class="form-control alinhamentoSelect" id="modalidades" name="IdModalidade" style="width: 60%">
                                    <option value="0">-- Selecione --</option>
                                    @foreach (var item in listModalidades)
                                    {
                                        if (Model.Modalidade.Id == item.IntValue)
                                        {
                                            <option value="@item.IntValue" selected="selected">@item.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@item.IntValue">@item.Name</option>
                                        }
                                    }
                                </select>
                            }
                            else
                            {
                                <select class="form-control alinhamentoSelect" id="modalidades" name="IdModalidade" style="width: 60%">
                                    <option value="0">-- Selecione --</option>
                                </select>
                            }
                            <span class="field-validation-valid text-danger" id="validaModalidades" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Data", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            <div class="input-group" style="width: 60%">
                                <input type="text" autocomplete="off" class="form-control alinhamentoSelect" id="data" name="Data"
                                       value="@Model.Data.ToShortDateString()" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>
                                </span>
                            </div>
                            <span class="field-validation-valid text-danger" id="validaData" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div>
                            @Html.Label("Horários", htmlAttributes: new { @class = "control-label col-md-3" })
                        </div>
                        <div class="col-md-4">
                            <select class="form-control alinhamentoSelect" id="horarios" name="Horario">
                                <option value="0">-- Selecione --</option>
                                @foreach (var item in listHorarios)
                                {
                                    if (Model.Data.ToShortTimeString() == item.Value)
                                    {
                                        <option value="@item.Value" selected="selected">@item.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Value">@item.Name</option>
                                    }
                                }
                            </select>
                            <span class="field-validation-valid text-danger" id="validaHorarios" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Valor - R$", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            <input type="text" autocomplete="off" class="form-control alinhamentoSelect" id="valor" style="width: 60%" name="Valor"
                                   value="@Model.Valor.ToString("C").Replace("R$ ", string.Empty)" />
                            <span class="field-validation-valid text-danger" id="validaValor" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="text-right col-md-12">
                    <button type="button" class="btn btn-primary" id="btnRetornar" name="btnRetornar" onclick="gerenciarAgenda.CloseModal()">
                        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>Retornar
                    </button>
                    <button type="button" class="btn btn-primary" id="btnSalvar">
                        Salvar <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
    }

    <script>

        $('#data').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            language: "pt-BR"
        });

        $('#data').mask('99/99/9999', { placeholder: "dd/mm/aaaa" });
        $('#valor').mask('000,00', { reverse: true });

        $('#profissional').change(function () {
            gerenciarAgenda.CarregaModalidades(this.value);
        });        

        $("#btnSalvar").on('click', function () {
            if (gerenciarAgenda.Validar())
                gerenciarAgenda.Salvar();
        });

        $(".close").on('click', function () {
            gerenciarAgenda.CloseModal();
        });
        
        var gerenciarAgenda = {

            CarregaModalidades: function (selected) {

                $('#modalidades').empty();
                $('#modalidades').append('<option value=0>-- Selecione --</option>');

                if (selected !== "0") {
                    $.getJSON("@Url.Action("GetModalidadesProfissional", "Agenda")",
                        { id: selected },
                        function (result) {
                            $.each(result, function () {
                            $('#modalidades').append('<option value=' +
                              this.IntValue + '>' + this.Name + '</option>');
                        });
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        validacao.errorAjax(jqXHR, textStatus, errorThrown);
                    });
                }
            },

            Salvar: function () {

                //Ajuste para impedir multiplos cliques
                event.preventDefault();
                var that = $(this);
                that.off('click');

                $.ajax({
                    url: "@Url.Action("Salvar", "Agenda")",
                    type: "POST",
                    data: $('form').serialize(),
                    success: function (result) {

                        var retorno = result.mensagensRetorno;

                        if (retorno.Status) {
                            swal({
                                title: '',
                                text: retorno.MensagemExibicao,
                                type: 'success',
                                confirmButtonColor: '#10386B',
                                allowOutsideClick: false
                            }).then(function () {
                                indexAgenda.listaAgendaGrid($(".abaGridConsultas"));
                                calendarioAgenda.carregaCalendarioMes($("#data").val());
                                bootbox.hideAll();
                            });
                        }
                        else {

                            swal({
                                title: '',
                                text: retorno.MensagemExibicao,
                                type: 'warning',
                                confirmButtonColor: '#10386B',
                                allowOutsideClick: false
                            });
                            console.log(retorno.MensagemAnalise);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        validacao.errorAjax(jqXHR, textStatus, errorThrown);
                    }
                }).always(function () {
                    that.on('click', gerenciarAgenda.salvar); //Devolve a ação do botão
                });

            },

            Validar: function () {

                var ehValido = true;

                var paciente = $("#paciente").val().trim();
                var validaPaciente = $("#validaPaciente");

                var profissional = $("#profissional").val().trim();
                var validaProfissional = $("#validaProfissional");

                var modalidades = $("#modalidades").val().trim();
                var validaModalidades = $("#validaModalidades");

                var data = $("#data").val().trim();
                var validaData = $("#validaData");

                var horarios = $("#horarios").val().trim();
                var validaHorarios = $("#validaHorarios");

                var valor = $("#valor").val().trim();
                var validaValor = $("#validaValor");

                if (validacao.selectSelecionado(paciente, validaPaciente, "Selecione um Paciente"))
                    ehValido = false;

                if (validacao.selectSelecionado(profissional, validaProfissional, "Selecione um Profissional"))
                    ehValido = false;

                if (validacao.selectSelecionado(modalidades, validaModalidades, "Selecione uma Modalidade"))
                    ehValido = false;

                if (validacao.campoNulo(data, validaData))
                    ehValido = false;

                if (validacao.selectSelecionado(horarios, validaHorarios, "Selecione um Horário"))
                    ehValido = false;

                if (validacao.campoNulo(valor, validaValor))
                    ehValido = false;

                return ehValido;
            },

            CloseModal: function () {
                bootbox.hideAll();
            }
        };

    </script>
}
